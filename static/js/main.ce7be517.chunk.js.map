{"version":3,"sources":["Cell.js","Board.js","Timer.js","OneToFifty.js","App.js","index.js"],"names":["Container","styled","div","Cell","num","handleClick","onClick","Board","numbers","map","index","key","Front","Back","Timer","useState","timeElapsed","setTimeElapsed","record","useRef","current","useEffect","timer","setInterval","alert","clearInterval","Math","floor","array","i","push","shuffleArray","length","j","random","StartButton","button","OneToFifty","setNumbers","gameFlag","setGameFlag","setCurrent","endGame","console","log","indexOf","slice","App","ReactDOM","render","document","getElementById"],"mappings":"4ZAWA,IAAMA,EAAYC,IAAOC,IAAV,KAQAC,EAhBf,YAAqC,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,YACnB,OACE,kBAACL,EAAD,CAAWM,QAAS,kBAAMD,EAAYD,KAC3B,IAARA,EAAYA,EAAM,O,wOCQzB,IAAMJ,EAAYC,IAAOC,IAAV,KASAK,EAnBf,YAA0C,IAAzBC,EAAwB,EAAxBA,QAASH,EAAe,EAAfA,YACxB,OACE,kBAAC,EAAD,KACGG,EAAQC,KAAI,SAACL,EAAKM,GAAN,OACX,kBAAC,EAAD,CAAMN,IAAKA,EAAKO,IAAKD,EAAOL,YAAaA,S,2YCgBjD,IAAML,EAAYC,IAAOC,IAAV,KAUTU,EAAQX,IAAOC,IAAV,KAILW,EAAOZ,IAAOC,IAAV,KAIKY,EAvCf,WAAkB,IAAD,EACuBC,mBAAS,GADhC,mBACRC,EADQ,KACKC,EADL,KAETC,EAASC,mBAWf,OAVAD,EAAOE,QAAUJ,EACjBK,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBN,GAAe,SAAAD,GAAW,OAAIA,EAAc,QAC3C,IACH,OAAO,WACLQ,MAAM,gBAAkBN,EAAOE,QAAU,KACzCK,cAAcH,MAEf,IAED,kBAAC,EAAD,KACE,kBAACV,EAAD,KAAQc,KAAKC,MAAMX,EAAc,KAAjC,KACA,kBAACH,EAAD,KAAQG,EAAc,IAAQ,M,qWCbpC,IADA,IAAIY,EAAQ,GACHC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAME,KAAKD,GA2Cb,IAAME,EAAe,SAAAH,GACnB,IAAK,IAAIC,EAAID,EAAMI,OAAS,EAAGH,EAAI,EAAGA,IAAK,CACzC,IAAII,EAAIP,KAAKC,MAAMD,KAAKQ,UAAYL,EAAI,IADC,EAElB,CAACD,EAAMK,GAAIL,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMK,GAFwB,KAI3C,OAAOL,GAGH5B,EAAYC,IAAOC,IAAV,KAUTiC,EAAclC,IAAOmC,OAAV,KAMFC,EAhEf,WAAuB,IAAD,EACUtB,mBAASa,GADnB,mBACbpB,EADa,KACJ8B,EADI,OAEYvB,oBAAS,GAFrB,mBAEbwB,EAFa,KAEHC,EAFG,OAGUzB,mBAAS,GAHnB,mBAGbK,EAHa,KAGJqB,EAHI,KAwBdC,EAAU,WACdF,GAAY,IAGd,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOhC,QAASA,EAASH,YA1BT,SAAAD,GAClB,GAAIA,IAAQgB,GAAWmB,EAAU,CACnB,KAARnC,IACFuC,QAAQC,IAAI,WACZF,KAEF,IAAMhC,EAAQF,EAAQqC,QAAQzC,GAC9BkC,GAAW,SAAA9B,GAAO,4BACbA,EAAQsC,MAAM,EAAGpC,IADJ,CAEhBN,EAAM,GAAKA,EAAM,GAAK,GAFN,YAGbI,EAAQsC,MAAMpC,EAAQ,QAE3B+B,GAAW,SAAArB,GAAO,OAAIA,EAAU,SAe/BmB,EACC,kBAAC,EAAD,MAEA,kBAACJ,EAAD,CAAa7B,QAfD,WAChBgC,EAAWP,EAAaH,IACxBa,EAAW,GACXD,GAAY,KAYR,WCVOO,MAJf,WACE,OAAO,kBAAC,EAAD,OCTTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ce7be517.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Cell({ num, handleClick }) {\r\n  return (\r\n    <Container onClick={() => handleClick(num)}>\r\n      {num !== 0 ? num : null}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid red;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n`;\r\n\r\nexport default Cell;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Cell from \"./Cell\";\r\n\r\nfunction Board({ numbers, handleClick }) {\r\n  return (\r\n    <Container>\r\n      {numbers.map((num, index) => (\r\n        <Cell num={num} key={index} handleClick={handleClick}></Cell>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 1px solid blue;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n`;\r\n\r\nexport default Board;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Timer() {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const record = useRef();\r\n  record.current = timeElapsed;\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed(timeElapsed => timeElapsed + 30);\r\n    }, 30);\r\n    return () => {\r\n      alert(\"Your Record :\" + record.current / 1000);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Front>{Math.floor(timeElapsed / 1000)}:</Front>\r\n      <Back>{(timeElapsed % 1000) / 10}</Back>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 30px;\r\n  width: 100px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Front = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  width: 1em;\r\n`;\r\n\r\nexport default Timer;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport Timer from \"./Timer\";\r\n\r\nlet array = [];\r\nfor (let i = 1; i <= 25; i++) {\r\n  array.push(i);\r\n}\r\n\r\nfunction OneToFifty() {\r\n  const [numbers, setNumbers] = useState(array);\r\n  const [gameFlag, setGameFlag] = useState(false);\r\n  const [current, setCurrent] = useState(1);\r\n  const handleClick = num => {\r\n    if (num === current && gameFlag) {\r\n      if (num === 50) {\r\n        console.log(\"Success\");\r\n        endGame();\r\n      }\r\n      const index = numbers.indexOf(num);\r\n      setNumbers(numbers => [\r\n        ...numbers.slice(0, index),\r\n        num < 26 ? num + 25 : 0,\r\n        ...numbers.slice(index + 1)\r\n      ]);\r\n      setCurrent(current => current + 1);\r\n    }\r\n  };\r\n  const startGame = () => {\r\n    setNumbers(shuffleArray(array));\r\n    setCurrent(1);\r\n    setGameFlag(true);\r\n  };\r\n  const endGame = () => {\r\n    setGameFlag(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Board numbers={numbers} handleClick={handleClick}></Board>\r\n      {gameFlag ? (\r\n        <Timer />\r\n      ) : (\r\n        <StartButton onClick={startGame}>start</StartButton>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst shuffleArray = array => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 600px;\r\n  height: 800px;\r\n  border: 1px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  margin-top: 30px;\r\n  width: 100px;\r\n  height: 50px;\r\n`;\r\n\r\nexport default OneToFifty;","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport OneToFifty from \"./OneToFifty\";\n\nfunction App() {\n  return <OneToFifty></OneToFifty>;\n}\n\nexport default App;","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}